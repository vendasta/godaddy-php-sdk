<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: godaddy/v1/api.proto

namespace Godaddy\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Replace all DNS records of the specified type for the specified domain
 * </pre>
 *
 * Protobuf type <code>godaddy.v1.ReplaceDNSRecordsForTypeRequest</code>
 */
class ReplaceDNSRecordsForTypeRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * A domain, ex google.com
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    private $domain = '';
    /**
     * <pre>
     * The type of a DNS record, ex. TXT
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    private $type = '';
    /**
     * <pre>
     * The DNSRecords being put
     * </pre>
     *
     * <code>repeated .godaddy.v1.DNSRecord dns_records = 3;</code>
     */
    private $dns_records;

    public function __construct() {
        \GPBMetadata\Godaddy\V1\Api::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * A domain, ex google.com
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * <pre>
     * A domain, ex google.com
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->domain = $var;
    }

    /**
     * <pre>
     * The type of a DNS record, ex. TXT
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     * The type of a DNS record, ex. TXT
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;
    }

    /**
     * <pre>
     * The DNSRecords being put
     * </pre>
     *
     * <code>repeated .godaddy.v1.DNSRecord dns_records = 3;</code>
     */
    public function getDnsRecords()
    {
        return $this->dns_records;
    }

    /**
     * <pre>
     * The DNSRecords being put
     * </pre>
     *
     * <code>repeated .godaddy.v1.DNSRecord dns_records = 3;</code>
     */
    public function setDnsRecords(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Godaddy\V1\DNSRecord::class);
        $this->dns_records = $arr;
    }

}

