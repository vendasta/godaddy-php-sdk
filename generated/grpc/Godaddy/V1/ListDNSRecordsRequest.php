<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: godaddy/v1/api.proto

namespace Godaddy\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Request for listing DNS records
 * </pre>
 *
 * Protobuf type <code>godaddy.v1.ListDNSRecordsRequest</code>
 */
class ListDNSRecordsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Domain
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    private $domain = '';
    /**
     * <pre>
     * Partner ID - deprecated
     * </pre>
     *
     * <code>string partner_id = 2 [deprecated = true];</code>
     */
    private $partner_id = '';
    /**
     * <pre>
     * Type of DNS record to filter for. Default is All.
     * </pre>
     *
     * <code>.godaddy.v1.DNSRecordType type = 3;</code>
     */
    private $type = 0;

    public function __construct() {
        \GPBMetadata\Godaddy\V1\Api::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Domain
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * <pre>
     * Domain
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->domain = $var;
    }

    /**
     * <pre>
     * Partner ID - deprecated
     * </pre>
     *
     * <code>string partner_id = 2 [deprecated = true];</code>
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * <pre>
     * Partner ID - deprecated
     * </pre>
     *
     * <code>string partner_id = 2 [deprecated = true];</code>
     */
    public function setPartnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_id = $var;
    }

    /**
     * <pre>
     * Type of DNS record to filter for. Default is All.
     * </pre>
     *
     * <code>.godaddy.v1.DNSRecordType type = 3;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     * Type of DNS record to filter for. Default is All.
     * </pre>
     *
     * <code>.godaddy.v1.DNSRecordType type = 3;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Godaddy\V1\DNSRecordType::class);
        $this->type = $var;
    }

}
