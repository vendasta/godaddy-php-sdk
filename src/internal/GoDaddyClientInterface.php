<?php 
# Code generated by sdkgen
# Generated on 2020-07-28 16:24:19.4049006 +0000 UTC using container gcr.io/repcore-prod/sdkgen:latest
# DO NOT EDIT!

namespace Vendasta\Godaddy\V1\internal;

interface GoDaddyClientInterface
{ 
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::GetDomainSuggestionAndPrice
     * @param \Godaddy\V1\GetDomainSuggestionAndPriceRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Godaddy\V1\GetDomainSuggestionAndPriceResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetDomainSuggestionAndPrice(\Godaddy\V1\GetDomainSuggestionAndPriceRequest $req, array $options = []): \Godaddy\V1\GetDomainSuggestionAndPriceResponse;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::ListDNSRecords
     * @param \Godaddy\V1\ListDNSRecordsRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Godaddy\V1\ListDNSRecordsResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListDNSRecords(\Godaddy\V1\ListDNSRecordsRequest $req, array $options = []): \Godaddy\V1\ListDNSRecordsResponse;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::PutDNSRecord
     * @param \Godaddy\V1\PutDNSRecordRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function PutDNSRecord(\Godaddy\V1\PutDNSRecordRequest $req, array $options = []): \Google\Protobuf\GPBEmpty;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::ReplaceDNSRecordsForType
     * @param \Godaddy\V1\ReplaceDNSRecordsForTypeRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ReplaceDNSRecordsForType(\Godaddy\V1\ReplaceDNSRecordsForTypeRequest $req, array $options = []): \Google\Protobuf\GPBEmpty;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::ReplaceAllDNSRecords
     * @param \Godaddy\V1\ReplaceAllDNSRecordsRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ReplaceAllDNSRecords(\Godaddy\V1\ReplaceAllDNSRecordsRequest $req, array $options = []): \Google\Protobuf\GPBEmpty;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::DeleteDNSRecord
     * @param \Godaddy\V1\DeleteDNSRecordRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function DeleteDNSRecord(\Godaddy\V1\DeleteDNSRecordRequest $req, array $options = []): \Google\Protobuf\GPBEmpty;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::GetDomainAvailable
     * @param \Godaddy\V1\GetDomainAvailableRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Godaddy\V1\GetDomainAvailableResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetDomainAvailable(\Godaddy\V1\GetDomainAvailableRequest $req, array $options = []): \Godaddy\V1\GetDomainAvailableResponse;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::GetDomainAgreements
     * @param \Godaddy\V1\GetDomainAgreementsRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Godaddy\V1\GetDomainAgreementsResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function GetDomainAgreements(\Godaddy\V1\GetDomainAgreementsRequest $req, array $options = []): \Godaddy\V1\GetDomainAgreementsResponse;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::ValidateDomainContact
     * @param \Godaddy\V1\ValidateDomainContactRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Godaddy\V1\ValidateDomainContactResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ValidateDomainContact(\Godaddy\V1\ValidateDomainContactRequest $req, array $options = []): \Godaddy\V1\ValidateDomainContactResponse;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::ListDomainsByBusinessID
     * @param \Godaddy\V1\ListDomainsByBusinessIDRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Godaddy\V1\ListDomainsByBusinessIDResponse proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function ListDomainsByBusinessID(\Godaddy\V1\ListDomainsByBusinessIDRequest $req, array $options = []): \Godaddy\V1\ListDomainsByBusinessIDResponse;
    
    /**
     * Auth wrapper for \Godaddy\V1\GoDaddyClient::TransferDomain
     * @param \Godaddy\V1\TransferDomainRequest $req proto request message
     * @param array $options optional options, possible keys:
     *              \Vendasta\Vax\RequestOptions::*
     * @return \Google\Protobuf\GPBEmpty proto response message
     * @throws \Vendasta\Vax\SDKException if this call encounters an error
     */
    public function TransferDomain(\Godaddy\V1\TransferDomainRequest $req, array $options = []): \Google\Protobuf\GPBEmpty;
    
}
